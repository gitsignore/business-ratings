{"version":3,"sources":["constants.js","components/panel/chipsNotation.js","components/panel/panelHeader.js","components/panel/panelBody.js","components/panel/forms/ratingForm.js","components/panel/panelFooter.js","components/panel/empty.js","components/map/index.js","helpers/index.js","models/rating.js","App.js","serviceWorker.js","index.js"],"names":["scores","color","value","fakeRatings","userName","businessName","comment","score","image","coordinates","latitude","longitude","isEnable","ChipsNotation","_ref","currentValue","action","Array","isArray","react_default","a","createElement","className","map","note","key","concat","includes","role","tabIndex","onClick","target","id","onKeyPress","defaultProps","PanelHeader","title","showFilters","filters","customDisplay","handleFilter","chipsNotation","order","type","placeholder","onChange","search","PanelBody","ratings","handleShowMap","rating","src","alt","RatingForm","current","errors","handleSubmit","handleChange","onSubmit","htmlFor","required","rows","PanelFooter","showForm","handleShowForm","ratingForm","Empty","loadRatings","style","height","Map","lib_react_default","center","zoom","pigeon_marker_lib_react_default","anchor","payload","_ref2","event","ascendingSort","b","descendingSort","Rating","_len","arguments","length","_key","_ref$userName","_ref$businessName","_ref$comment","_ref$isEnable","_ref$score","_ref$image","_ref$coordinates","Object","classCallCheck","this","_this","keys","every","max","undefined","Math","floor","random","randomInteger","App","props","possibleConstructorReturn","getPrototypeOf","call","loadFakeRatings","localStorage","setItem","JSON","stringify","setState","prevState","showMap","RatingModel","editForm","checkErrors","state","_event$target","filter","val","push","_event$target2","objectSpread","preventDefault","validate","setRandomImage","addCoordinates","unshift","bind","assertThisInitialized","_this2","navigator","geolocation","getCurrentPosition","position","coords","cachedRatings","getItem","parse","ratingsList","_this$state","filteredRatings","list","toLowerCase","match","trim","sort","filterRatings","average","reduce","total","currentRating","toFixed","panelHeader","panelBody","empty","panelFooter","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaeb139e.chunk.js","sourcesContent":["const scores = [\n  { color: 'error', value: 0 },\n  { color: 'error', value: 1 },\n  { color: 'warning', value: 2 },\n  { color: 'primary', value: 3 },\n  { color: 'success', value: 4 },\n  { color: 'success', value: 5 }\n];\n\nconst fakeRatings = [\n  {\n    userName: 'Maxime Signoret',\n    businessName: 'S. Company',\n    comment: 'Happy life company.',\n    score: 5,\n    image: 'https://picturepan2.github.io/spectre/img/avatar-1.png',\n    coordinates: { latitude: 48.8337552, longitude: 2.2526615 },\n    isEnable: true\n  },\n  {\n    userName: 'Maxime Signoret',\n    businessName: 'M. Company',\n    comment: 'A legacy company with old school management.',\n    score: 2,\n    image: 'https://picturepan2.github.io/spectre/img/avatar-4.png',\n    coordinates: { latitude: 48.8803754, longitude: 2.3247805 },\n    isEnable: true\n  },\n  {\n    userName: 'Chuck Norris',\n    businessName: 'Chuck Norris Company',\n    comment: 'No comment.',\n    score: 4,\n    image: 'https://picturepan2.github.io/spectre/img/avatar-2.png',\n    coordinates: { latitude: 48.8337552, longitude: 2.2526615 },\n    isEnable: false\n  }\n];\n\nexport { scores, fakeRatings };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { scores } from '../../constants';\n\nconst ChipsNotation = ({ currentValue, action }) => {\n  const value = Array.isArray(currentValue) ? currentValue : [currentValue];\n\n  return (\n    <div className=\"text-center m-2\">\n      {scores.map(note => (\n        <span\n          key={`note_${note.value}`}\n          className={`chip ${value.includes(note.value) &&\n            `bg-${note.color}`} c-hand`}\n          role=\"button\"\n          tabIndex=\"0\"\n          onClick={() => action({ target: { id: 'score', value: note.value } })}\n          onKeyPress={() =>\n            action({ target: { id: 'score', value: note.value } })\n          }\n        >\n          {note.value}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nChipsNotation.propTypes = {\n  currentValue: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  action: PropTypes.func.isRequired\n};\n\nChipsNotation.defaultProps = {\n  currentValue: null\n};\n\nexport default ChipsNotation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipsNotation from './chipsNotation';\n\nconst PanelHeader = ({\n  title,\n  showFilters,\n  filters,\n  customDisplay,\n  handleFilter\n}) => (\n  <div className=\"panel-header\">\n    <div className=\"col-12 col-mx-auto text-center m-1\">\n      <div className=\"panel-title h3\">{title}</div>\n    </div>\n    {showFilters && (\n      <div>\n        <ChipsNotation currentValue={filters.score} action={handleFilter} />\n        <div className=\"col-12 col-mx-auto text-center\">\n          <button\n            className={`btn btn-${\n              filters.order === 'ASC' ? 'primary' : 'link'\n            } btn-action s-circle`}\n            onClick={() =>\n              handleFilter({ target: { id: 'order', value: 'ASC' } })\n            }\n          >\n            <i className=\"icon icon-arrow-up\" />\n          </button>\n          <button\n            className={`btn btn-${\n              filters.order === 'DESC' ? 'primary' : 'link'\n            } btn-action s-circle`}\n            onClick={() =>\n              handleFilter({ target: { id: 'order', value: 'DESC' } })\n            }\n          >\n            <i className=\"icon icon-arrow-down\" />\n          </button>\n        </div>\n        <div className=\"input-group has-icon-right mt-2\">\n          {customDisplay !== false ? (\n            <span className=\"input-group-addon bg-primary\">\n              {customDisplay}&nbsp;/ 5\n            </span>\n          ) : (\n            false\n          )}\n          <input\n            id=\"search\"\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleFilter}\n            value={filters.search}\n          />\n          <i\n            className=\"form-icon icon icon-cross c-hand\"\n            role=\"button\"\n            tabIndex=\"0\"\n            onClick={() =>\n              handleFilter({ target: { id: 'search', value: '' } })\n            }\n            onKeyPress={() =>\n              handleFilter({ target: { id: 'search', value: '' } })\n            }\n          />\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nPanelHeader.propTypes = {\n  title: PropTypes.string,\n  showFilters: PropTypes.bool,\n  filters: PropTypes.object,\n  customDisplay: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  handleFilter: PropTypes.func.isRequired\n};\n\nPanelHeader.defaultProps = {\n  title: 'Business Ratings',\n  showFilters: false,\n  filters: { search: '', score: [], order: null },\n  customDisplay: ''\n};\n\nexport default PanelHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { scores } from '../../constants';\n\nconst PanelBody = ({ ratings, handleShowMap }) => (\n  <div className=\"panel-body\">\n    {ratings.map((rating, key) => (\n      <div\n        key={`rating_${key}`}\n        className=\"tile columns c-hand\"\n        onClick={() => handleShowMap(rating)}\n      >\n        <div className=\"tile-icon col-3 col-xl-4 col-xs-12\">\n          <div className=\"chip\">\n            <img src={rating.image} className=\"avatar avatar-sm\" alt=\"\" />\n            {rating.userName}\n          </div>\n        </div>\n        <div className=\"tile-content col-8 col-xl-6 col-md-11\">\n          <p className=\"tile-title text-bold\">{rating.businessName}</p>\n          <p className=\"tile-subtitle\">{rating.comment}</p>\n        </div>\n        <div className=\"tile-action col-1\">\n          <span className=\"chip float-right\" role=\"button\" tabIndex=\"0\">\n            <span className={`text-${scores[rating.score].color}`}>\n              {rating.score}\n            </span>\n            <span className=\"text-dark\">&nbsp;/ 5</span>\n          </span>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nPanelBody.propTypes = {\n  ratings: PropTypes.arrayOf(\n    PropTypes.shape({\n      userName: PropTypes.string.isRequired,\n      businessName: PropTypes.string.isRequired,\n      comment: PropTypes.string.isRequired,\n      score: PropTypes.number.isRequired,\n      image: PropTypes.string.isRequired,\n      isEnable: PropTypes.bool.isRequired\n    })\n  ).isRequired,\n  handleShowMap: PropTypes.func.isRequired\n};\n\nPanelBody.defaultProps = {\n  ratings: []\n};\n\nexport default PanelBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipsNotation from '../chipsNotation';\n\nconst RatingForm = ({ current, errors, handleSubmit, handleChange }) => (\n  <form className=\"form-horizontal\" onSubmit={handleSubmit}>\n    <div className={`form-group ${errors.businessName ? 'has-error' : ''}`}>\n      <div className=\"col-3 col-sm-12\">\n        <label className=\"form-label\" htmlFor=\"businessName\">\n          Business name\n        </label>\n      </div>\n      <div className=\"col-8 col-sm-12\">\n        <input\n          className=\"form-input\"\n          id=\"businessName\"\n          type=\"text\"\n          value={current.businessName}\n          onChange={handleChange}\n          placeholder=\"The business name\"\n          required=\"\"\n        />\n        {errors.businessName && (\n          <p className=\"form-input-hint\">Required field.</p>\n        )}\n      </div>\n    </div>\n    <div className={`form-group ${errors.userName ? 'has-error' : ''}`}>\n      <div className=\"col-3 col-sm-12\">\n        <label className=\"form-label\" htmlFor=\"userName\">\n          User name\n        </label>\n      </div>\n      <div className=\"col-8 col-sm-12\">\n        <input\n          className=\"form-input\"\n          id=\"userName\"\n          type=\"text\"\n          value={current.userName}\n          onChange={handleChange}\n          placeholder=\"Your user name\"\n        />\n        {errors.userName && <p className=\"form-input-hint\">Required field.</p>}\n      </div>\n    </div>\n    <div className={`form-group ${errors.comment ? 'has-error' : ''}`}>\n      <div className=\"col-3 col-sm-12\">\n        <label className=\"form-label\" htmlFor=\"comment\">\n          Comment\n        </label>\n      </div>\n      <div className=\"col-8 col-sm-12\">\n        <textarea\n          className=\"form-input\"\n          id=\"comment\"\n          value={current.comment}\n          onChange={handleChange}\n          placeholder=\"Add a comment here\"\n          rows=\"4\"\n        />\n        {errors.comment && <p className=\"form-input-hint\">Required field.</p>}\n      </div>\n    </div>\n    <div className={`form-group ${errors.score ? 'has-error' : ''}`}>\n      <div className=\"col-3 col-sm-12\">\n        <label className=\"form-label\" htmlFor=\"score\">\n          Score\n        </label>\n      </div>\n      <div className=\"col-8 col-sm-12\">\n        <ChipsNotation currentValue={current.score} action={handleChange} />\n        {errors.score && <p className=\"form-input-hint\">Required field.</p>}\n      </div>\n    </div>\n    <button className=\"btn btn-success btn-block\" type=\"submit\">\n      Submit\n    </button>\n  </form>\n);\n\nRatingForm.propTypes = {\n  current: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\nexport default RatingForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RatingForm from './forms/ratingForm';\n\nconst PanelFooter = ({\n  current,\n  errors,\n  showForm,\n  handleShowForm,\n  handleSubmit,\n  handleChange\n}) => (\n  <div className=\"panel-footer\">\n    <div className=\"columns\">\n      {showForm && (\n        <div className=\"column col-12 mb-2\">\n          <button\n            className=\"btn btn-action s-circle float-right mb-2\"\n            type=\"button\"\n            onClick={handleShowForm}\n          >\n            <i className=\"icon icon-cross\" />\n          </button>\n        </div>\n      )}\n    </div>\n    {showForm && (\n      <RatingForm\n        current={current}\n        errors={errors}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    )}\n    {!showForm && (\n      <button\n        className=\"btn btn-primary btn-block\"\n        type=\"button\"\n        onClick={handleShowForm}\n      >\n        Add rating\n      </button>\n    )}\n  </div>\n);\n\nPanelFooter.propTypes = {\n  current: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  showForm: PropTypes.bool.isRequired,\n  handleShowForm: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\nexport default PanelFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Empty = ({ loadRatings }) => (\n  <div className=\"empty\" style={{ height: '100vh' }}>\n    <p className=\"empty-title h6\">You have no ratings</p>\n    <p className=\"empty-subtitle\">Click the button to load some fake ratings</p>\n    <div className=\"empty-action\">\n      <button className=\"btn btn-primary btn-sm\" onClick={loadRatings}>\n        Load ratings\n      </button>\n    </div>\n  </div>\n);\n\nEmpty.propTypes = {\n  loadRatings: PropTypes.func.isRequired\n};\n\nexport default Empty;\n","import React from 'react';\r\nimport PigeonMap from 'pigeon-maps';\r\nimport PigeonMarker from 'pigeon-marker';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Map = ({ rating, handleShowMap }) => (\r\n  <PigeonMap\r\n    center={[rating.coordinates.latitude, rating.coordinates.longitude]}\r\n    zoom={12}\r\n  >\r\n    <button\r\n      className=\"btn btn-action s-circle float-right m-2\"\r\n      onClick={() => handleShowMap(rating)}\r\n    >\r\n      <i className=\"icon icon-cross\" />\r\n    </button>\r\n    <PigeonMarker\r\n      anchor={[rating.coordinates.latitude, rating.coordinates.longitude]}\r\n      payload={1}\r\n      onClick={({ event, anchor, payload }) => {}}\r\n    />\r\n  </PigeonMap>\r\n);\r\n\r\nMap.propTypes = {\r\n  rating: PropTypes.object.isRequired,\r\n  handleShowMap: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Map;\r\n","const randomInteger = (max = 5) => Math.floor(Math.random() * max) + 1;\n\nconst filterRatings = (ratingsList, filters) => {\n  const { search, score, order } = filters;\n\n  let list = ratingsList.filter(\n    rating =>\n      rating.isEnable &&\n      (rating.userName.toLowerCase().match(search.toLowerCase().trim()) ||\n        rating.businessName.toLowerCase().match(search.toLowerCase().trim()) ||\n        rating.comment.toLowerCase().match(search.toLowerCase().trim()))\n  );\n\n  if (order === 'DESC') {\n    list = list.sort(descendingSort);\n  }\n\n  if (order === 'ASC') {\n    list = list.sort(ascendingSort);\n  }\n\n  list = list.filter(rating =>\n    score.length ? score.includes(rating.score) : true\n  );\n\n  return list;\n};\n\nconst ascendingSort = (a, b) => {\n  if (a.score < b.score) {\n    return 1;\n  }\n  if (a.score > b.score) {\n    return -1;\n  }\n  return 0;\n};\n\nconst descendingSort = (a, b) => {\n  if (a.score < b.score) {\n    return -1;\n  }\n  if (a.score > b.score) {\n    return 1;\n  }\n  return 0;\n};\n\nconst ratingAverage = ratingsList =>\n  (ratingsList.length &&\n    (\n      ratingsList.reduce(\n        (total, currentRating) => total + currentRating.score,\n        0\n      ) / ratingsList.length\n    ).toFixed(1)) ||\n  0;\n\nexport { randomInteger, filterRatings, ratingAverage };\n","import { randomInteger } from '../helpers';\r\n\r\nclass Rating {\r\n  constructor(\r\n    ...{\r\n      userName = '',\r\n      businessName = '',\r\n      comment = '',\r\n      isEnable = false,\r\n      score = null,\r\n      image = 'https://picturepan2.github.io/spectre/img/avatar-1.png',\r\n      coordinates = { latitude: null, longitude: null }\r\n    }\r\n  ) {\r\n    this.userName = userName;\r\n    this.businessName = businessName;\r\n    this.comment = comment;\r\n    this.isEnable = isEnable;\r\n    this.score = score;\r\n    this.image = image;\r\n    this.coordinates = coordinates;\r\n  }\r\n\r\n  validate() {\r\n    return Object.keys(this).every(key => {\r\n      if ('isEnable' === key || 'coordinates' === key) {\r\n        return true;\r\n      }\r\n\r\n      if ('score' === key) {\r\n        return this[key] !== null && this[key] >= 0 && this[key] <= 5;\r\n      }\r\n\r\n      return this[key] !== null && this[key].length > 0;\r\n    });\r\n  }\r\n\r\n  addCoordinates(latitude, longitude) {\r\n    this.coordinates.latitude = latitude;\r\n    this.coordinates.longitude = longitude;\r\n  }\r\n\r\n  setRandomImage() {\r\n    this.image = `https://picturepan2.github.io/spectre/img/avatar-${randomInteger()}.png`;\r\n  }\r\n}\r\n\r\nexport default Rating;\r\n","import React, { Component } from 'react';\nimport PanelHeader from './components/panel/panelHeader';\nimport PanelBody from './components/panel/panelBody';\nimport PanelFooter from './components/panel/panelFooter';\nimport Empty from './components/panel/empty';\nimport Map from './components/map';\nimport RatingModel from './models/rating';\nimport { filterRatings, ratingAverage } from './helpers';\nimport { fakeRatings } from './constants';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false,\n      showMap: false,\n      editForm: false,\n      filters: { search: '', score: [], order: null },\n      errors: {},\n      current: new RatingModel(),\n      ratings: [],\n      coordinates: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleShowForm = this.handleShowForm.bind(this);\n    this.handleShowMap = this.handleShowMap.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.loadFakeRatings = this.loadFakeRatings.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      const geolocation = navigator.geolocation;\n      geolocation.getCurrentPosition(position =>\n        this.setState({ coordinates: position.coords })\n      );\n    }\n    const cachedRatings = localStorage.getItem('ratings');\n    this.setState({ ratings: JSON.parse(cachedRatings) || [] });\n  }\n\n  loadFakeRatings = () => {\n    localStorage.setItem('ratings', JSON.stringify(fakeRatings));\n    this.setState({ ratings: fakeRatings });\n  };\n\n  handleShowForm = () => {\n    this.setState(prevState => ({\n      showForm: !prevState.showForm,\n      showMap: false,\n      current: new RatingModel(),\n      editForm: false,\n      errors: {}\n    }));\n  };\n\n  checkErrors = () => {\n    let errors = {};\n    const { current } = this.state;\n    Object.keys(current).map(key => {\n      if ('score' === key && current[key] === null) {\n        errors[key] = true;\n      } else if (\n        'isEnable' !== key &&\n        (this[key] === null || current[key].length === 0)\n      ) {\n        errors[key] = true;\n      }\n\n      return errors;\n    });\n\n    return errors;\n  };\n\n  handleShowMap = rating => {\n    this.setState(prevState => ({\n      showMap: !prevState.showMap,\n      current: rating\n    }));\n  };\n\n  handleFilter = event => {\n    const { id, value } = event.target;\n\n    this.setState(prevState => {\n      const { filters } = prevState;\n\n      if (Array.isArray(filters[id])) {\n        if (filters[id].includes(value)) {\n          filters[id] = filters[id].filter(val => val !== value);\n        } else {\n          filters[id].push(value);\n        }\n      } else if (id === 'order' && value === filters.order) {\n        filters.order = null;\n      } else {\n        filters[id] = value;\n      }\n\n      return { filters };\n    });\n  };\n\n  handleChange = event => {\n    const { id, value } = event.target;\n\n    this.setState(prevState => {\n      const { current } = prevState;\n      const errors = { ...prevState.errors };\n      delete errors[id];\n      current[id] = value;\n\n      return {\n        current,\n        errors\n      };\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.setState(prevState => {\n      const { ratings, current, coordinates } = prevState;\n      if (current.validate()) {\n        current.setRandomImage();\n        current.isEnable = true;\n        if (coordinates) {\n          current.addCoordinates(coordinates.latitude, coordinates.longitude);\n        }\n        ratings.unshift(current);\n        localStorage.setItem('ratings', JSON.stringify(ratings));\n\n        return {\n          showForm: !prevState.showForm,\n          current: {},\n          ratings\n        };\n      }\n\n      return {\n        errors: this.checkErrors()\n      };\n    });\n  };\n\n  render() {\n    const {\n      ratings,\n      errors,\n      current,\n      showForm,\n      showMap,\n      filters,\n      editForm\n    } = this.state;\n    const filteredRatings = filterRatings(ratings, filters);\n    const average = ratingAverage(filteredRatings);\n\n    return (\n      <div className=\"App container\" id=\"cards\">\n        <div className=\"columns\">\n          <div className=\"column col-5 col-xl-8 col-sm-10 col-xs-11 col-mx-auto\">\n            <div className=\"panel\">\n              <PanelHeader\n                {...{\n                  filters,\n                  showFilters: !showForm,\n                  customDisplay: average,\n                  handleFilter: this.handleFilter\n                }}\n              />\n              {!showForm && <div className=\"divider\" />}\n              {!showForm &&\n                (ratings.length > 0 ? (\n                  showMap ? (\n                    <Map rating={current} handleShowMap={this.handleShowMap} />\n                  ) : (\n                    <PanelBody\n                      {...{\n                        ratings: filteredRatings,\n                        handleShowMap: this.handleShowMap\n                      }}\n                    />\n                  )\n                ) : (\n                  <Empty loadRatings={this.loadFakeRatings} />\n                ))}\n              <div className=\"divider\" />\n              <PanelFooter\n                {...{\n                  current,\n                  errors,\n                  showForm,\n                  editForm,\n                  handleShowForm: this.handleShowForm,\n                  handleChange: this.handleChange,\n                  handleSubmit: this.handleSubmit\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}